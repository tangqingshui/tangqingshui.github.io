(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{766:function(t,n,s){"use strict";s.r(n);var a=s(4),r=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"表格已拿到数据但不展示其文本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表格已拿到数据但不展示其文本"}},[t._v("#")]),t._v(" 表格已拿到数据但不展示其文本")]),t._v(" "),s("p",[t._v("二次封装了一个表格，其根据后端传过来的columns与data数据自动生成，但突然行内的数据不显示，不知道大家看到这里首先会想到哪里出了问题？\n")]),s("hr"),t._v("\n首先根据排除法，前面的配置都没有问题，就说明封装的没有问题，其问题只能出现在后端传的数据上，在然后行有渲染说明已经成功的拿到数据，其文本不显示，就能够很容易的判断出是其传过来的columns与data数据映射有问题。\n可我居然一时没有想到，在别的地方纠结错误在哪，这说明我思考问题的方式有问题，得改进。\n"),s("hr"),t._v("\n总结：出现一个bug,首先得找到与之"),s("strong",[t._v("相关的数据与方法")]),t._v("，然后从其操作与逻辑上来思考这个问题出在哪，不能漫无目的的去寻找"),s("p")])}),[],!1,null,null,null);n.default=r.exports}}]);